[설치]
npm i -g @nestjs/cli
-------------------------------------------------------------------------------------

[nest 프로젝트 생성]
nest new 폴더명
-------------------------------------------------------------------------------------

src 폴더 안에 대부분의 코드를 작성 할 것이다!
-------------------------------------------------------------------------------------

[nodemon 같은 기능  hot reload]
npm i --save-dev webpack-node-externals run-script-webpack-plugin webpack

[webpack-hmr.config.js 파일 생성]
const nodeExternals = require('webpack-node-externals');
const { RunScriptWebpackPlugin } = require('run-script-webpack-plugin');

module.exports = function (options, webpack) {
  return {
    ...options,
    entry: ['webpack/hot/poll?100', options.entry],
    externals: [
      nodeExternals({
        allowlist: ['webpack/hot/poll?100'],
      }),
    ],
    plugins: [
      ...options.plugins,
      new webpack.HotModuleReplacementPlugin(),
      new webpack.WatchIgnorePlugin({
        paths: [/\.js$/, /\.d\.ts$/],
      }),
      new RunScriptWebpackPlugin({ name: options.output.filename, autoRestart: false }),
    ],
  };
};

[src/main.ts 수정]
declare const module: any

if(module.hot) {
    module.hot.accept();
    module.hot.dispose(() => app.close());
}

[package.json 수정]
"start:dev": "nest start --watch --webpackPath webpack-hmr.config.js",
-------------------------------------------------------------------------------------

앞으로 npm run start:dev 로 하면 된다!
-------------------------------------------------------------------------------------

express 에서는 app.js 에 router를 추가하는 방식이지만
nest 에서는 module 위주의 방식

controllers : router라고 보면된다.
@Get() : GET /
------------------------------------------------------------------------------------

// 공통주소
@Controller('abc'){
    // 세부주소
    @Get() : GET /abc
}
--------------------------------------------------------------------------------

@ : annotation, decorator
이걸 붙이면 nest에서 알아서 해준다.
-> IoC (Inversion of Control) : 제어의 역전

개발자 입장에서 거부감이 있을 수도 있다.(블랙박스 : 동작 과정을 볼 수 없다.)
--------------------------------------------------------------------------------

req, res 쓰는게 안좋은 이유 : jest로 테스트할때 목킹해야한다.
Nest에는 return 만 하면 되니 함수만 목킹하면 된다.